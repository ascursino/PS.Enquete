//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;



public partial class ModelDataContext : Microsoft.SharePoint.Linq.DataContext {
	
	#region Extensibility Method Definitions
	partial void OnCreated();
	#endregion
	
	public ModelDataContext(string requestUrl) : 
			base(requestUrl) {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Enquete")]
	public Microsoft.SharePoint.Linq.EntityList<EnqueteItem> Enquete {
		get {
			return this.GetList<EnqueteItem>("Enquete");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Lista de Respostas")]
	public Microsoft.SharePoint.Linq.EntityList<ListaDeRespostasItem> ListaDeRespostas {
		get {
			return this.GetList<ListaDeRespostasItem>("Lista de Respostas");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Perguntas")]
	public Microsoft.SharePoint.Linq.EntityList<PerguntasItem> Perguntas {
		get {
			return this.GetList<PerguntasItem>("Perguntas");
		}
	}
	
	[Microsoft.SharePoint.Linq.ListAttribute(Name="Respostas")]
	public Microsoft.SharePoint.Linq.EntityList<RespostasItem> Respostas {
		get {
			return this.GetList<RespostasItem>("Respostas");
		}
	}
}

/// <summary>
/// Crie um novo item de lista.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EnqueteItem))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ListaDeRespostasItem))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PerguntasItem))]
[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(RespostasItem))]
public partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
	
	private System.Nullable<int> _id;
	
	private System.Nullable<int> _version;
	
	private string _path;
	
	private Microsoft.SharePoint.Linq.EntityState _entityState;
	
	private System.Collections.Generic.IDictionary<string, object> _originalValues;
	
	private string _título;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion

	Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
		get {
			return this._entityState;
		}
		set {
			if ((value != this._entityState)) {
				this._entityState = value;
			}
		}
	}

	System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
		get {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			return this._originalValues;
		}
	}
	
	public Item() {
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
	public System.Nullable<int> Id {
		get {
			return this._id;
		}
		set {
			if ((value != this._id)) {
				this.OnPropertyChanging("Id", this._id);
				this._id = value;
				this.OnPropertyChanged("Id");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
	public System.Nullable<int> Version {
		get {
			return this._version;
		}
		set {
			if ((value != this._version)) {
				this.OnPropertyChanging("Version", this._version);
				this._version = value;
				this.OnPropertyChanged("Version");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
	public string Path {
		get {
			return this._path;
		}
		set {
			if ((value != this._path)) {
				this.OnPropertyChanging("Path", this._path);
				this._path = value;
				this.OnPropertyChanged("Path");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_título", Required=true, FieldType="Text")]
	public virtual string Título {
		get {
			return this._título;
		}
		set {
			if ((value != this._título)) {
				this.OnPropertyChanging("Título", this._título);
				this._título = value;
				this.OnPropertyChanged("Título");
			}
		}
	}
	
	public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
	
	public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
	
	protected virtual void OnPropertyChanged(string propertyName) {
		if ((null != this.PropertyChanged)) {
			this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
		}
	}
	
	protected virtual void OnPropertyChanging(string propertyName, object value) {
		if ((null == this._originalValues)) {
			this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
		}
		if ((false == this._originalValues.ContainsKey(propertyName))) {
			this._originalValues.Add(propertyName, value);
		}
		if ((null != this.PropertyChanging)) {
			this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
		}
	}
}

/// <summary>
/// Crie um novo item de lista.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Enquete")]
public partial class EnqueteItem : Item {
	
	private System.Nullable<System.DateTime> _dataDeVencimento;
	
	private Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem> _listaDeRespostasItem;
	
	private Microsoft.SharePoint.Linq.EntitySet<PerguntasItem> _perguntasItem;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public EnqueteItem() {
		this._listaDeRespostasItem = new Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem>();
		this._listaDeRespostasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ListaDeRespostasItem>>(this.OnListaDeRespostasItemSync);
		this._listaDeRespostasItem.OnChanged += new System.EventHandler(this.OnListaDeRespostasItemChanged);
		this._listaDeRespostasItem.OnChanging += new System.EventHandler(this.OnListaDeRespostasItemChanging);
		this._perguntasItem = new Microsoft.SharePoint.Linq.EntitySet<PerguntasItem>();
		this._perguntasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerguntasItem>>(this.OnPerguntasItemSync);
		this._perguntasItem.OnChanged += new System.EventHandler(this.OnPerguntasItemChanged);
		this._perguntasItem.OnChanging += new System.EventHandler(this.OnPerguntasItemChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Data_x0020_de_x0020_Vencimento", Storage="_dataDeVencimento", Required=true, FieldType="DateTime")]
	public System.Nullable<System.DateTime> DataDeVencimento {
		get {
			return this._dataDeVencimento;
		}
		set {
			if ((value != this._dataDeVencimento)) {
				this.OnPropertyChanging("DataDeVencimento", this._dataDeVencimento);
				this._dataDeVencimento = value;
				this.OnPropertyChanged("DataDeVencimento");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Enquete", Storage="_listaDeRespostasItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Lista de Respostas")]
	public Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem> ListaDeRespostasItem {
		get {
			return this._listaDeRespostasItem;
		}
		set {
			this._listaDeRespostasItem.Assign(value);
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Enquete", Storage="_perguntasItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Perguntas")]
	public Microsoft.SharePoint.Linq.EntitySet<PerguntasItem> PerguntasItem {
		get {
			return this._perguntasItem;
		}
		set {
			this._perguntasItem.Assign(value);
		}
	}
	
	private void OnListaDeRespostasItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("ListaDeRespostasItem", this._listaDeRespostasItem.Clone());
	}
	
	private void OnListaDeRespostasItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("ListaDeRespostasItem");
	}
	
	private void OnListaDeRespostasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ListaDeRespostasItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.Enquete = this;
		}
		else {
			e.Item.Enquete = null;
		}
	}
	
	private void OnPerguntasItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("PerguntasItem", this._perguntasItem.Clone());
	}
	
	private void OnPerguntasItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("PerguntasItem");
	}
	
	private void OnPerguntasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerguntasItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.Enquete = this;
		}
		else {
			e.Item.Enquete = null;
		}
	}
}

/// <summary>
/// Crie um novo item de lista.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Lista de Respostas")]
public partial class ListaDeRespostasItem : Item {
	
	private System.Nullable<bool> _acertou;
	
	private Microsoft.SharePoint.Linq.EntityRef<EnqueteItem> _enquete;
	
	private Microsoft.SharePoint.Linq.EntityRef<PerguntasItem> _pergunta;
	
	private Microsoft.SharePoint.Linq.EntityRef<RespostasItem> _resposta;
	
	private System.Nullable<int> _autorId;
	
	private string _autorImnName;
	
	private Microsoft.SharePoint.Linq.EntityRef<RespostasItem> _respostaCerta;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public ListaDeRespostasItem() {
		this._enquete = new Microsoft.SharePoint.Linq.EntityRef<EnqueteItem>();
		this._enquete.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EnqueteItem>>(this.OnEnqueteSync);
		this._enquete.OnChanged += new System.EventHandler(this.OnEnqueteChanged);
		this._enquete.OnChanging += new System.EventHandler(this.OnEnqueteChanging);
		this._pergunta = new Microsoft.SharePoint.Linq.EntityRef<PerguntasItem>();
		this._pergunta.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerguntasItem>>(this.OnPerguntaSync);
		this._pergunta.OnChanged += new System.EventHandler(this.OnPerguntaChanged);
		this._pergunta.OnChanging += new System.EventHandler(this.OnPerguntaChanging);
		this._resposta = new Microsoft.SharePoint.Linq.EntityRef<RespostasItem>();
		this._resposta.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RespostasItem>>(this.OnRespostaSync);
		this._resposta.OnChanged += new System.EventHandler(this.OnRespostaChanged);
		this._resposta.OnChanging += new System.EventHandler(this.OnRespostaChanging);
		this._respostaCerta = new Microsoft.SharePoint.Linq.EntityRef<RespostasItem>();
		this._respostaCerta.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RespostasItem>>(this.OnRespostaCertaSync);
		this._respostaCerta.OnChanged += new System.EventHandler(this.OnRespostaCertaChanged);
		this._respostaCerta.OnChanging += new System.EventHandler(this.OnRespostaCertaChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Acertou", Storage="_acertou", FieldType="Boolean")]
	public System.Nullable<bool> Acertou {
		get {
			return this._acertou;
		}
		set {
			if ((value != this._acertou)) {
				this.OnPropertyChanging("Acertou", this._acertou);
				this._acertou = value;
				this.OnPropertyChanged("Acertou");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Enquete", Storage="_enquete", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Enquete")]
	public EnqueteItem Enquete {
		get {
			return this._enquete.GetEntity();
		}
		set {
			this._enquete.SetEntity(value);
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Pergunta", Storage="_pergunta", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Perguntas")]
	public PerguntasItem Pergunta {
		get {
			return this._pergunta.GetEntity();
		}
		set {
			this._pergunta.SetEntity(value);
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Resposta", Storage="_resposta", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Respostas")]
	public RespostasItem Resposta {
		get {
			return this._resposta.GetEntity();
		}
		set {
			this._resposta.SetEntity(value);
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Autor", Storage="_autorId", FieldType="User", IsLookupId=true)]
	public System.Nullable<int> AutorId {
		get {
			return this._autorId;
		}
		set {
			if ((value != this._autorId)) {
				this.OnPropertyChanging("AutorId", this._autorId);
				this._autorId = value;
				this.OnPropertyChanged("AutorId");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Autor", Storage="_autorImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
	public string AutorImnName {
		get {
			return this._autorImnName;
		}
		set {
			if ((value != this._autorImnName)) {
				this.OnPropertyChanging("AutorImnName", this._autorImnName);
				this._autorImnName = value;
				this.OnPropertyChanged("AutorImnName");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Resposta_x0020_Certa", Storage="_respostaCerta", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Respostas")]
	public RespostasItem RespostaCerta {
		get {
			return this._respostaCerta.GetEntity();
		}
		set {
			this._respostaCerta.SetEntity(value);
		}
	}
	
	private void OnEnqueteChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("Enquete", this._enquete.Clone());
	}
	
	private void OnEnqueteChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("Enquete");
	}
	
	private void OnEnqueteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EnqueteItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.ListaDeRespostasItem.Add(this);
		}
		else {
			e.Item.ListaDeRespostasItem.Remove(this);
		}
	}
	
	private void OnPerguntaChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("Pergunta", this._pergunta.Clone());
	}
	
	private void OnPerguntaChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("Pergunta");
	}
	
	private void OnPerguntaSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerguntasItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.ListaDeRespostasItem.Add(this);
		}
		else {
			e.Item.ListaDeRespostasItem.Remove(this);
		}
	}
	
	private void OnRespostaChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("Resposta", this._resposta.Clone());
	}
	
	private void OnRespostaChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("Resposta");
	}
	
	private void OnRespostaSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RespostasItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.ListaDeRespostasItem.Add(this);
		}
		else {
			e.Item.ListaDeRespostasItem.Remove(this);
		}
	}
	
	private void OnRespostaCertaChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("RespostaCerta", this._respostaCerta.Clone());
	}
	
	private void OnRespostaCertaChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("RespostaCerta");
	}
	
	private void OnRespostaCertaSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RespostasItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.ListaDeRespostasItem0.Add(this);
		}
		else {
			e.Item.ListaDeRespostasItem0.Remove(this);
		}
	}
}

/// <summary>
/// Crie um novo item de lista.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Perguntas")]
public partial class PerguntasItem : Item {
	
	private Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem> _listaDeRespostasItem;
	
	private Microsoft.SharePoint.Linq.EntityRef<EnqueteItem> _enquete;
	
	private Microsoft.SharePoint.Linq.EntitySet<RespostasItem> _respostasItem;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public PerguntasItem() {
		this._listaDeRespostasItem = new Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem>();
		this._listaDeRespostasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ListaDeRespostasItem>>(this.OnListaDeRespostasItemSync);
		this._listaDeRespostasItem.OnChanged += new System.EventHandler(this.OnListaDeRespostasItemChanged);
		this._listaDeRespostasItem.OnChanging += new System.EventHandler(this.OnListaDeRespostasItemChanging);
		this._enquete = new Microsoft.SharePoint.Linq.EntityRef<EnqueteItem>();
		this._enquete.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EnqueteItem>>(this.OnEnqueteSync);
		this._enquete.OnChanged += new System.EventHandler(this.OnEnqueteChanged);
		this._enquete.OnChanging += new System.EventHandler(this.OnEnqueteChanging);
		this._respostasItem = new Microsoft.SharePoint.Linq.EntitySet<RespostasItem>();
		this._respostasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RespostasItem>>(this.OnRespostasItemSync);
		this._respostasItem.OnChanged += new System.EventHandler(this.OnRespostasItemChanged);
		this._respostasItem.OnChanging += new System.EventHandler(this.OnRespostasItemChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Pergunta", Storage="_listaDeRespostasItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Lista de Respostas")]
	public Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem> ListaDeRespostasItem {
		get {
			return this._listaDeRespostasItem;
		}
		set {
			this._listaDeRespostasItem.Assign(value);
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Enquete", Storage="_enquete", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Enquete")]
	public EnqueteItem Enquete {
		get {
			return this._enquete.GetEntity();
		}
		set {
			this._enquete.SetEntity(value);
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Pergunta", Storage="_respostasItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Respostas")]
	public Microsoft.SharePoint.Linq.EntitySet<RespostasItem> RespostasItem {
		get {
			return this._respostasItem;
		}
		set {
			this._respostasItem.Assign(value);
		}
	}
	
	private void OnListaDeRespostasItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("ListaDeRespostasItem", this._listaDeRespostasItem.Clone());
	}
	
	private void OnListaDeRespostasItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("ListaDeRespostasItem");
	}
	
	private void OnListaDeRespostasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ListaDeRespostasItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.Pergunta = this;
		}
		else {
			e.Item.Pergunta = null;
		}
	}
	
	private void OnEnqueteChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("Enquete", this._enquete.Clone());
	}
	
	private void OnEnqueteChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("Enquete");
	}
	
	private void OnEnqueteSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EnqueteItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.PerguntasItem.Add(this);
		}
		else {
			e.Item.PerguntasItem.Remove(this);
		}
	}
	
	private void OnRespostasItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("RespostasItem", this._respostasItem.Clone());
	}
	
	private void OnRespostasItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("RespostasItem");
	}
	
	private void OnRespostasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RespostasItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.Pergunta = this;
		}
		else {
			e.Item.Pergunta = null;
		}
	}
}

/// <summary>
/// Crie um novo item de lista.
/// </summary>
[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Respostas")]
public partial class RespostasItem : Item {
	
	private System.Nullable<bool> _respostaCerta;
	
	private Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem> _listaDeRespostasItem;
	
	private Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem> _listaDeRespostasItem0;
	
	private Microsoft.SharePoint.Linq.EntityRef<PerguntasItem> _pergunta;
	
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate();
	partial void OnCreated();
	#endregion
	
	public RespostasItem() {
		this._listaDeRespostasItem = new Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem>();
		this._listaDeRespostasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ListaDeRespostasItem>>(this.OnListaDeRespostasItemSync);
		this._listaDeRespostasItem.OnChanged += new System.EventHandler(this.OnListaDeRespostasItemChanged);
		this._listaDeRespostasItem.OnChanging += new System.EventHandler(this.OnListaDeRespostasItemChanging);
		this._listaDeRespostasItem0 = new Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem>();
		this._listaDeRespostasItem0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ListaDeRespostasItem>>(this.OnListaDeRespostasItem0Sync);
		this._listaDeRespostasItem0.OnChanged += new System.EventHandler(this.OnListaDeRespostasItem0Changed);
		this._listaDeRespostasItem0.OnChanging += new System.EventHandler(this.OnListaDeRespostasItem0Changing);
		this._pergunta = new Microsoft.SharePoint.Linq.EntityRef<PerguntasItem>();
		this._pergunta.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerguntasItem>>(this.OnPerguntaSync);
		this._pergunta.OnChanged += new System.EventHandler(this.OnPerguntaChanged);
		this._pergunta.OnChanging += new System.EventHandler(this.OnPerguntaChanging);
		this.OnCreated();
	}
	
	[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Resposta_x0020_Certa", Storage="_respostaCerta", FieldType="Boolean")]
	public System.Nullable<bool> RespostaCerta {
		get {
			return this._respostaCerta;
		}
		set {
			if ((value != this._respostaCerta)) {
				this.OnPropertyChanging("RespostaCerta", this._respostaCerta);
				this._respostaCerta = value;
				this.OnPropertyChanged("RespostaCerta");
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Resposta", Storage="_listaDeRespostasItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Lista de Respostas")]
	public Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem> ListaDeRespostasItem {
		get {
			return this._listaDeRespostasItem;
		}
		set {
			this._listaDeRespostasItem.Assign(value);
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Resposta_x0020_Certa", Storage="_listaDeRespostasItem0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Lista de Respostas")]
	public Microsoft.SharePoint.Linq.EntitySet<ListaDeRespostasItem> ListaDeRespostasItem0 {
		get {
			return this._listaDeRespostasItem0;
		}
		set {
			this._listaDeRespostasItem0.Assign(value);
		}
	}
	
	[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Pergunta", Storage="_pergunta", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Perguntas")]
	public PerguntasItem Pergunta {
		get {
			return this._pergunta.GetEntity();
		}
		set {
			this._pergunta.SetEntity(value);
		}
	}
	
	private void OnListaDeRespostasItemChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("ListaDeRespostasItem", this._listaDeRespostasItem.Clone());
	}
	
	private void OnListaDeRespostasItemChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("ListaDeRespostasItem");
	}
	
	private void OnListaDeRespostasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ListaDeRespostasItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.Resposta = this;
		}
		else {
			e.Item.Resposta = null;
		}
	}
	
	private void OnListaDeRespostasItem0Changing(object sender, System.EventArgs e) {
		this.OnPropertyChanging("ListaDeRespostasItem0", this._listaDeRespostasItem0.Clone());
	}
	
	private void OnListaDeRespostasItem0Changed(object sender, System.EventArgs e) {
		this.OnPropertyChanged("ListaDeRespostasItem0");
	}
	
	private void OnListaDeRespostasItem0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<ListaDeRespostasItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.RespostaCerta = this;
		}
		else {
			e.Item.RespostaCerta = null;
		}
	}
	
	private void OnPerguntaChanging(object sender, System.EventArgs e) {
		this.OnPropertyChanging("Pergunta", this._pergunta.Clone());
	}
	
	private void OnPerguntaChanged(object sender, System.EventArgs e) {
		this.OnPropertyChanged("Pergunta");
	}
	
	private void OnPerguntaSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerguntasItem> e) {
		if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
			e.Item.RespostasItem.Add(this);
		}
		else {
			e.Item.RespostasItem.Remove(this);
		}
	}
}
